CREATE OR REPLACE TRIGGER GAMES_ID_TRG
  BEFORE INSERT ON GAMES
  FOR EACH ROW
BEGIN
  :new.id := GAMES_ID.nextval;
END;
/
CREATE OR REPLACE PACKAGE PACKAGE_GAMES AS
  FUNCTION ADD_GAME_STARTED(p_first_player_id USERS.ID%TYPE, p_second_player_id USERS.ID%TYPE) RETURN GAMES.ID%TYPE;
  PROCEDURE ADD_GAME_ENDED(p_id GAMES.ID%TYPE, p_movements GAMES.MOVEMENTS%TYPE, p_game_result GAMES.GAME_RESULT%TYPE);
END;
/
CREATE OR REPLACE PACKAGE BODY PACKAGE_GAMES AS
  FUNCTION ADD_GAME_STARTED(p_first_player_id USERS.ID%TYPE, p_second_player_id USERS.ID%TYPE) RETURN GAMES.ID%TYPE AS
  BEGIN
    INSERT INTO GAMES(STARTED_AT, FIRST_PLAYER_ID, SECOND_PLAYER_ID) VALUES(CURRENT_TIMESTAMP, p_first_player_id, p_second_player_id);
    RETURN GAMES_ID.currval;
  END;
  
  PROCEDURE ADD_GAME_ENDED(p_id GAMES.ID%TYPE, p_movements GAMES.MOVEMENTS%TYPE, p_game_result GAMES.GAME_RESULT%TYPE) AS
  BEGIN
    UPDATE GAMES SET MOVEMENTS = p_movements, game_result = p_game_result where id = p_id;
  END;
END;
/*
DECLARE
  v_id number;
BEGIN
  v_id := PACKAGE_GAMES.ADD_GAME_STARTED(2,3);
  PACKAGE_GAMES.ADD_GAME_ENDED(1,'DSGSGDSGDGSDGS','1/2');
  DBMS_OUTPUT.PUT_LINE(v_id);
END;*/